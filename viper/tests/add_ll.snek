(record node ((val int) (next node)))

(fun add_val ((new_val int) (head node)) node
    (let
        ((curr_val (lookup head val)))
        (if
            (= (lookup head next) NULL)
            (node (+ curr_val new_val) NULL)
            (node (+ curr_val new_val) (add_val new_val (lookup head next)))
        )
    )
)

(let
    ((head (node 0 (node 2 (node 5 (node 10 NULL))))) (new_head (add_val input head)))
    (block
        (print (lookup head val))
        (print (lookup new_head val))
        (print (lookup (lookup new_head next) val))
    )
)